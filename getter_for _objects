
const robot = {
  _model: '1E78V2',
  _energyLevel: 25, //'low',//900.6//100//80 / 20
  get energyLevel() {
    if(typeof this._energyLevel == 'number')
    //made mistake by not making number a string
    {
      return `My current energy level is ${this._energyLevel}`
    } //made mistake by making sa typo in current
    else 
    {
      return 'System malfunction: cannot retrieve energy level'
    }
  } 
};

console.log(robot.energyLevel) // made a mistake by adding () to the getter command

/// Task
//1. In robot, create a getter method named energyLevel using the get keyword. Leave function body blank for now.
//2. Inside the getter method, add an if statement to check if this._energyLevel is a number using the typeof operator. If that condition is truthy, return 'My current energy level is ENERGYLEVEL'. Replace ENERGYLEVEL with the value of this._energyLevel.Make sure you return the string and not logging it to the console.
//3. If this._energyLevel isn’t a number it could be that the _energyLevel property was altered. Let’s add a default return statement for when such a scenario arises.Add an else statement that returns 'System malfunction: cannot retrieve energy level'.

//4. Log the result of calling the getter method energyLevel on robot to the console. Notice that the method will return a formatted response rather than just accessing a property!

// tested with integers, floats and strings, special characters

//Lesson learnt: get <name> () {action to perform}
// or  get <name> () { 
//if (condition) {
//action to perform}
//}
// object_name.name_of_get - no need for ()
